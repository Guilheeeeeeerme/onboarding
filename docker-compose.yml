
volumes:
  tomcat-webapps:

services:
    
    postgres:
        image: postgres:11
        container_name: onboarding-postgres
        environment:
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASS}
            - POSTGRES_DB=${DB_NAME}
        ports:
            - "5433:5432"
        volumes:
          - /var/lib/postgresql/data

    redis:
        image: redis:7
        container_name: onboarding-redis
        ports:
            - "6380:6379"
        # restart: always

    mock-readings:
        image: node:14.21.1
        container_name: onboarding-mock-readings
        command: bash -c "npm install && node index.js"
        working_dir: /app/xpd-mock-readings
        ports:
            - "8000:8000"
        volumes:
            - ./xpd-mock-readings:/app/xpd-mock-readings
            - /app/xpd-mock-readings/node_modules
        # restart: always

    setup:
        build:
            context: xpd-setup-api
        container_name: onboarding-setup
        environment:
            - DB_USER=${DB_USER}
            - DB_PASS=${DB_PASS}
            - DB_NAME=${DB_NAME}
            - DB_HOST=${DB_HOST}
            - DB_PORT=${DB_PORT}
        ports:
            - "8080:8080"
        # restart: always

    operations:
        image: node:18.14.0
        container_name: onboarding-operations
        command: bash -c "npm install && npm run start:dev"
        working_dir: /app/operations
        environment:
            - OPERATION_SERVER_PORT=${OPERATION_SERVER_PORT}
            - SETUP_API_HOST=${SETUP_API_HOST}
            - DB_HOST=${DB_HOST}
            - DB_PORT=${DB_PORT}
            - DB_NAME=${DB_NAME}
            - DB_USER=${DB_USER}
            - DB_PASS=${DB_PASS}

            - READINGS_MODE=${READINGS_MODE}
            - LOCAL_SOCKET_READINGS_ACCESS_IP=${LOCAL_SOCKET_READINGS_ACCESS_IP}
            - LOCAL_SOCKET_READINGS_PORT=${LOCAL_SOCKET_READINGS_PORT}
            - WITS_SERVICE_READINGS_ACCESS_IP=${WITS_SERVICE_READINGS_ACCESS_IP}
            - WITS_SERVICE_READINGS_PORT=${WITS_SERVICE_READINGS_PORT}
            - LAN_SOCKET_READINGS_ACCESS_IP=${LAN_SOCKET_READINGS_ACCESS_IP}
            - LAN_SOCKET_READINGS_PORT=${LAN_SOCKET_READINGS_PORT}

            # NEW FEATURE - Might not be available
            - READINGS_ACCESS_HOST=${READINGS_ACCESS_HOST}
            - READINGS_ACCESS_PORT=${READINGS_ACCESS_PORT}
            - ENABLE_MOCK_READINGS=${ENABLE_MOCK_READINGS}
            - MOCK_READINGS_VARIATION=${MOCK_READINGS_VARIATION}
            - MOCK_READINGS_START_ANYWHERE=${MOCK_READINGS_START_ANYWHERE}
        ports:
            - "8081:8081"
        volumes:
            - ./operation-server:/app/operations
            - /app/operations/node_modules
        # restart: always

    admin:
        image: node:14.21.1
        container_name: onboarding-admin
        command: bash -c "npm install && npm start"
        working_dir: /app/admin
        ports:
            - "9000:9000"
        volumes:
            - ./tela-admin:/app/admin
            - /app/admin/node_modules
        restart: always

    driller-react:
        image: node:14.21.1
        container_name: onboarding-driller-react
        command: bash -c "npm install && npm start"
        working_dir: /app/driller-react
        ports:
            - "3000:3000"
        volumes:
            - ./tela-driller-react:/app/driller-react
            - /app/driller-react/node_modules
        restart: always
